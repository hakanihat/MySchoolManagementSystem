@using OnlineExaminationSystem.ViewModels
@model TakeExamViewModel

<style>
    .container-3d {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        background-color: #fff;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        width: 80%;
        margin: auto;
    }

    .heading {
        text-align: center;
    }

    .separator {
        margin: 20px 0;
        border: none;
        border-top: 1px solid #000;
    }

    .header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 20px;
    }

    .centered {
        flex-grow: 1;
        display: flex;
        justify-content: center;
    }

    .custom-alert {
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        z-index: 9999;
    }

        .custom-alert .alert-title {
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .custom-alert .alert-message {
            font-size: 16px;
        }

</style>

<div class="container-3d">


<div class="text-center">
    <h1>@Model.ExamName</h1>
    <hr class="separator">
    <form method="post" id="examForm" asp-route-answersJson="answersJson">
            <div style="display: inline-block; border: 2px solid gray; padding: 10px; border-radius: 10px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); margin-bottom:10px">
                <div class="timer">
                    <span id="hours">0@((int)Math.Floor((double)Model.ExamDuration / 60))</span>:<span id="minutes">0@((int)Math.Floor((double)Model.ExamDuration % 60))</span>:<span id="seconds">00</span>
                </div>
            </div>
        <input type="hidden" name="examId" value="@Model.ExamId" />
        <input type="hidden" name="assignmentId" value="@Model.AssignmentId" />

        @* Hidden JSON object to store selected answers *@
        <input type="hidden" id="answersJson" name="answersJson" value="" />
        <input type="hidden" id="textAnswersJson" name="textAnswersJson" value="" />

        @foreach (var question in Model.Questions)
        {
            <div style="margin-bottom: 20px; padding: 10px; border: 2px solid gray;">
                <h3 style="text-align: left;">
                    @(Model.Questions.IndexOf(question) + 1). @question.Text
                    <span style="font-size: 16px; color: red;font-family: Arial, sans-serif;">- @question.Points p.</span>
                </h3>

                <input type="hidden" name="questions[@question.Id].questionId" value="@question.Id" />

                <div style="margin-top: 10px;">
                    @if (question.QuestionType == QuestionType.SingleChoice || question.QuestionType == QuestionType.TrueFalse)
                    {
                        <div style="display: flex; flex-direction: column;">
                            @foreach (var answer in question.Answers)
                            {
                                <div style="display: flex; align-items: center;">
                                    <input type="radio" name="questions[@question.Id].selectedAnswerId" value="@answer.Id" style="margin-right: 10px;" />
                                    <label style="margin-bottom: 0;">@answer.Text</label>
                                </div>
                            }
                            <input type="radio" name="questions[@question.Id].selectedAnswerId" value="-1" checked style="display:none" />
                        </div>
                    }
                    else if (question.QuestionType == QuestionType.MultipleChoice)
                    {
                        <div style="display: flex; flex-direction: column;">
                            @foreach (var answer in question.Answers)
                            {
                                <div style="display: flex; align-items: center;">
                                    <input type="checkbox" name="questions[@question.Id].selectedAnswerIds" value="@answer.Id" style="margin-right: 10px;" />
                                    <label style="margin-bottom: 0;">@answer.Text</label>
                                </div>
                            }
                        </div>
                    }
                    else if (question.QuestionType == QuestionType.Essay || question.QuestionType == QuestionType.ShortAnswer)
                    {
                        <textarea name="@question.Id" style="width: 100%;"></textarea>
                    }
                </div>
            </div>
        }

        <div class="text-center">
            <button type="button" id="submitExam">Submit Exam</button>
        </div>
    </form>
</div>
</div>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>  
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.1.4/toastr.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.1.4/toastr.min.css" />
    @if (Model.IsSecure)
        {
    <script src="~/js/securityScript.js"></script>
        }
    <script>
        var examDuration = @Model.ExamDuration * 60; // Convert to seconds

        // Retrieve the remaining time from localStorage, if available
        var storedRemainingTime = localStorage.getItem("remainingTime");
        if (storedRemainingTime !== null) {
            examDuration = parseInt(storedRemainingTime);
        }

        var x = setInterval(function () {
            var hours = Math.floor(examDuration / 3600);
            var minutes = Math.floor((examDuration % 3600) / 60);
            var seconds = Math.floor(examDuration % 60);

            // Update the timer element with the remaining time
            document.getElementById("hours").innerHTML = hours < 10 ? "0" + hours : hours;
            document.getElementById("minutes").innerHTML = minutes < 10 ? "0" + minutes : minutes;
            document.getElementById("seconds").innerHTML = seconds < 10 ? "0" + seconds : seconds;

            examDuration--;

            // Save the remaining time to localStorage
            localStorage.setItem("remainingTime", examDuration.toString());

            // If the countdown is finished, display "Time's Up" and submit the exam
            if (examDuration < 0) {
                clearInterval(x);
                document.getElementById("hours").innerHTML = "00";
                document.getElementById("minutes").innerHTML = "00";
                document.getElementById("seconds").innerHTML = "00";
                submitExam();
            }
        }, 1000);

        function submitExam() {
            // Clear the remaining time from localStorage
            localStorage.removeItem("remainingTime");

            var formData = $("#examForm").serializeArray();
            var selectedAnswers = {};
            var textAnswers = {};

            for (var i = 0; i < formData.length; i++) {
                var key = formData[i].name;
                var value = formData[i].value;

                if (key.endsWith("selectedAnswerId")) {
                    var questionId = key.replace("questions[", "").replace("].selectedAnswerId", "");
                    if (!selectedAnswers[questionId]) {
                        selectedAnswers[questionId] = [value];
                    } else {
                        selectedAnswers[questionId].push(value);
                    }
                } else if (key.endsWith("selectedAnswerIds")) {
                    var questionId = key.replace("questions[", "").replace("].selectedAnswerIds", "");
                    var answerIds = value.split(",");
                    if (!selectedAnswers[questionId]) {
                        selectedAnswers[questionId] = answerIds;
                    } else {
                        selectedAnswers[questionId] = selectedAnswers[questionId].concat(answerIds);
                    }
                } else if (key.match(/^\d+$/)) {
                    textAnswers[key] = value;
                }
            }

            var jsonData = JSON.stringify(selectedAnswers);
            console.log(jsonData);

            // Set the value of the hidden input fields to the JSON data
            $("#answersJson").val(jsonData);
            $("#textAnswersJson").val(JSON.stringify(textAnswers));

            // Submit the form
            document.getElementById("examForm").submit();
        }

        $(document).ready(function () {
            $("#submitExam").click(function () {
                submitExam();
            });
        });
    </script>



}

    